input {
      generator {
        lines => [
          '{"message": "172.23.0.1 - - [09/Jan/2023:11:42:27 +0000] \"POST / HTTP/1.1\" 200 329 \"http://localhost/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36\" \"-\"",
            "host": "172.23.0.7",
            "stream": "stdout",
            "docker": {
                "hostname": "3f0e7f5da2ce",
                "image": "sh1nd3l/proxy:0.1",
                "id": "3f0e7f5da2ce4f1950c74f957be2d60bbe3d16fe877ed99e5b79103457341b82",
                "name": "/proxy"
                    }
            }',
            '{"message": "[pid: 7|app: 0|req: 2/2] 172.23.0.5 () {48 vars in 1011 bytes} [Mon Jan  9 11:42:28 2023] GET /monster/532058e6975a2bc96d3e86ea58a08e5b9295b3525c2bdb493decd5089fcce889 => generated 352 bytes in 74 msecs (HTTP/1.0 200) 2 headers in 65 bytes (1 switches on core 0)",
                "host": "172.23.0.7",
                "stream": "stderr",
                "docker": {
                "hostname": "78ede4cdf8ec",
                "image": "sh1nd3l/flask-server:0.5",
                "id": "78ede4cdf8ecd9d6fb162e0229fc791b83466e4153cc893efa47c13a25c758c3",
                "name": "/flask"
                            }
            }'
        ]
        count => 0
        codec => json
      }
}

filter {

    if [docker][name] == '/proxy' {

       grok {
          match => { "message" => "%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:access_time}\] \"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:body_sent_bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\"" }
          remove_field => "message"
            }

         mutate {
            add_tag => "proxy"
            remove_field => ["docker"]
            }

    } else if [docker][name] == '/flask' {

       grok {
              match => { "message" => '.* %{IP:client_ip} .* \[(?<request_date>%{DAY} %{MONTH}  %{MONTHDAY} %{TIME} %{YEAR})\] %{WORD:request_method} %{URIPATH:path} .* (?<status>[0-9]{3})' }
              remove_field => "message"
            }

        mutate {
            add_tag => "flask"
             remove_field => ["docker"]
             }

    } else {

        mutate {
            add_tag => "unknown"
            remove_field => ["docker"]
        }

    }


}

output {
  stdout {}
}