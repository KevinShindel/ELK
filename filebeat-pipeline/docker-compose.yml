version: "3.8"
services:

  es-node-01:
    container_name: es-node-01
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    image: elasticsearch:7.17.0
    networks:
      - elastic

  kibana-01:
    container_name: kibana-01
    image: kibana:7.17.0
    ports:
      - "5601:5601"
    environment:
      - "ELASTICSEARCH_HOSTS=http://es-node-01:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "kibana-01:5601"]
      interval: 60s
      timeout: 60s
      retries: 5
    depends_on:
      - es-node-01
    networks:
      - elastic

#  java_app:
#    image: febbweiss/java-log-generator:latest
#    depends_on:
#      - es-node-01
#      - kibana-01
#    networks:
#      - elastic

  nginx:
    container_name: nginx-01
    ports:
      - "80:80"
    image: nginx:latest
    depends_on:
      - es-node-01
      - kibana-01
    networks:
      - elastic
    healthcheck:
      test: [ "CMD", "curl", "-f", "nginx-01:80" ]
      interval: 60s
      timeout: 60s
      retries: 5

  logstash:
    container_name: logstash-01
    volumes:
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    image: logstash:7.16.3
    depends_on:
      kibana-01:
        condition: service_healthy
    networks:
      - elastic

  filebeat:
    user: root
    container_name: filebeat-01
    command: --strict.perms=false
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    image: 'docker.elastic.co/beats/filebeat:7.17.0'
    depends_on:
      kibana-01:
        condition: service_healthy
    networks:
      - elastic

networks:
  elastic:
    name: elastic